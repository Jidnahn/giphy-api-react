{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpectApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpectApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"yLA8BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAkBzC,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAOhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAjBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKHI,MAAMF,GALH,cAKfG,EALe,gBAMEA,EAAIC,OANN,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAIrCa,QAAQC,IAAIR,GAhBS,kBAiBdA,GAjBc,4CAAH,sDCaLS,EAXK,SAAC,GAAwB,IAAtBN,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGhC,OAFAa,QAAQC,IAAIL,EAAIC,EAAOV,GAGrB,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCqBKS,EAxBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFL,SAACA,GAAc,IAAD,EACfd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GAAD,OACrBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDX2BK,CAAc5B,GAAlCa,EAFkB,EAExBN,KAAce,EAFU,EAEVA,QAMtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GACC,mBAAGJ,UAAU,mCAAb,wBAEF,qBAAKA,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEIjBkB,EAtBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,mBADrB,mBAClB4C,EADkB,KACN7C,EADM,KAQzB,OACE,gCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG6C,EAAWrB,KAAI,SAACsB,GACf,OAAO,cAAC,EAAD,CAAmB/B,SAAU+B,GAAfA,Y,MCd/BC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.cd2d6b99.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n\r\n    // console.log(\"Submit hecho\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSumbit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=FcSIoTsgz0AaO7PqzUTehz2s5bxMwADA`;\r\n\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  console.log(gifs);\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  console.log(id, title, url);\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifts } from \"../hooks/useFetchGifs\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n// { useState, useEffect }\r\nconst GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n  const { data: images, loading } = useFetchGifts(category);\r\n\r\n  // useEffect(() => {\r\n  //   getGifs(category).then(setImages);\r\n  // }, [category]);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifts = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GifGrid from \"./Components/GifGrid\";\r\n\r\nconst GifExpectApp = () => {\r\n  const [categories, setCategories] = useState([\"Koe no Katachi\"]);\r\n\r\n  // const handleAdd = () => {\r\n  //   const newCategory = \"Hibike! Euphonium\";\r\n  //   setCategories((cats) => [...cats, newCategory]);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((cat) => {\r\n          return <GifGrid key={cat} category={cat} />;\r\n        })}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpectApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpectApp from \"./GifExpectApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpectApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}